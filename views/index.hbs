<div class="row" id="presetRow">
	<div class="col-xs-4"></div>
	<div class="col-xs-4" id="preset">
		<button type="button" class="btn btn-slate btn-lg" data-toggle="modal" data-target="#presets">Choose Layout Preset</button>
	</div>
	<div class="col-xs-4"></div>
</div>
<div class="row is-flex">
	<div class="col-xs-2"></div>
	<div class="col-xs-2" id="swapLeft">
		<i class="fa fa-arrows-h fa-6x fa-rotate-315" aria-hidden="true" data-left="leftMonitor" data-right="topMonitor"></i>
	</div>
	<div class="col-xs-4 channel" id="topMonitor">
		<span class="channel-desc" data-id="" data-name="" data-desc=""></span>
		<i class="fa fa-desktop fa-10x" aria-hidden="true" data-monitor="top" data-toggle="modal" data-target="#channels"></i>
	</div>
	<div class="col-xs-2" id="swapRight">
		<i class="fa fa-arrows-h fa-6x fa-rotate-45" aria-hidden="true" data-left="topMonitor" data-right="rightMonitor"></i>
	</div>
	<div class="col-xs-2"></div>
</div>
<div class="row is-flex">
	<div class="col-xs-2"></div>
	<div class="col-xs-3 channel" id="leftMonitor">
		<div>
			<i class="fa fa-desktop fa-6x" aria-hidden="true" data-monitor="left" data-toggle="modal" data-target="#channels"></i>
			<i class="fa fa-desktop fa-6x" aria-hidden="true" data-monitor="left" data-toggle="modal" data-target="#channels"></i>
		</div>
		<span class="channel-desc" data-id="" data-name="" data-desc=""></span>
	</div>
	<div class="col-xs-2" id="swapAcross">
		<i class="fa fa-arrows-h fa-6x" aria-hidden="true" data-left="leftMonitor" data-right="rightMonitor"></i>
	</div>
	<div class="col-xs-3 channel" id="rightMonitor">
		<div>
			<i class="fa fa-desktop fa-6x" aria-hidden="true" data-monitor="right" data-toggle="modal" data-target="#channels"></i>
			<i class="fa fa-desktop fa-6x" aria-hidden="true" data-monitor="right" data-toggle="modal" data-target="#channels"></i>
		</div>
		<span class="channel-desc" data-id="" data-name="" data-desc=""></span>
	</div>
	<div class="col-xs-2"></div>
</div>
<script>
	//Globals
	var preset = {};
	var monitorSetup = {};
	var trigger;
	var presets = false;
	var channels = false;
	var receivers = false;

	//Listener for monitor events
	var handled = false;
	$(document).on("touchend click", ".fa-desktop", function(e){
	    e.stopImmediatePropagation();
	    if(e.type == "touchend") {
	        handled = true;
	    }
	    else if(e.type == "click" && !handled) {
	    }
	    else {
	        handled = false;
	    }
	});

	//Listener for swap arrow events
	var swapped = false;
	$(document).on("touchend click", ".fa-arrows-h", function(e){
	    e.stopImmediatePropagation();
	    if(e.type == "touchend") {
	        swapped = true;
	        handleIt(e);
	    }
	    else if(e.type == "click" && !swapped) {
	        handleIt(e);
	    }
	    else {
	        swapped = false;
	    }
	});
	var channeled = false;
	$(document).on("touchend click", "#channels li", function(e) {
		e.stopImmediatePropagation();
	    if(e.type == "touchend") {
	        channeled = true;
	        handleChannelChange(e);
	    }
	    else if(e.type == "click" && !channeled) {
	        handleChannelChange(e);
	    }
	    else {
	        channeled = false;
	    }
	});
	var pre = false;
	$(document).on("touchend click", "#presets li", function(e) {
		e.stopImmediatePropagation();
	    if(e.type == "touchend") {
	        pre = true;
	        handlePreset(e);
	    }
	    else if(e.type == "click" && !pre) {
	        handlePreset(e);
	    }
	    else {
	        pre = false;
	    }
	});

	function handleIt(e) {
		var leftEle = $('#'+e.target.dataset.left+' .channel-desc')[0];
		var rightEle = $('#'+e.target.dataset.right+' .channel-desc')[0];
		var left = leftEle.innerHTML
	    var right = rightEle.innerHTML;
	    leftEle.innerHTML = right;
	    rightEle.innerHTML = left;
	    //call to api to switch the monitor channels here
	    var receiverOneId = $(leftEle).attr('data-rxid');
	    var receiverTwoId = $(rightEle).attr('data-rxid');
	    var channelOneId = $(leftEle).attr('data-id');
	    var channelTwoId = $(rightEle).attr('data-id');
	    workspace.changeChannel(receiverOneId, channelTwoId);
	    workspace.changeChannel(receiverTwoId, channelOneId);
	}
	function handlePreset(e) {
		//Remove the "selected" class from any li's in this modal
		$('#presets li.selected').removeClass("selected");
		//Set the clicked element to have "selected" class
		$(e.target).addClass("selected");
		$('#presets').modal('hide');
		//Change the preset
		workspace.changePreset(e.target.dataset.name);
	}
	function handleChannelChange(e) {
		//Remove the "selected" class from any li's in modals
		$('#channels li.selected').removeClass("selected");
		// $('#presets li.selected').removeClass("selected");
		preset = undefined;
		//Set the clicked element to have "selected" class
		$(e.target).addClass("selected");
		//Change the text labels accordingly
		$('#channels').modal('hide');
		var selector = $('#' + trigger.dataset.monitor + 'Monitor');
		$(selector).find('span').replaceWith('<span class="channel-desc" data-rxid="" data-id="'+e.target.dataset.id+'" data-name="'+e.target.dataset.name+'" data-desc="'+e.target.dataset.desc+'">'+e.target.dataset.desc+'</span>');
		//Update the monitorSetup object to reflect this change
		var thisMon = $(trigger.parentElement).find('i').attr('data-monitor');
		
		monitorSetup[thisMon].desc = e.target.dataset.desc;
		monitorSetup[thisMon].id = e.target.dataset.id;
		monitorSetup[thisMon].name = e.target.dataset.name;

		//Change the monitors
		workspace.changeChannel(monitorSetup[thisMon].rxid, workspace.getChannelsByName(monitorSetup[thisMon].name).c_id);
	}
	//Window on load events
	// $(document).ready(function() {
	function initPage() {
		updateChannels();
		updatePresets();
		//TODO QUESTION: Set a default preset?
		// preset = presets[0];
		
		//TODO QUESTION: Do we want to let the monitor come up as left or set default preset?
		// workspace.changePreset(preset.cp_id);

	}

	//Find channel helper function
	function findChannel(e) {
		for (var i=0;i<channels.length;i++) {
			if (channels[i].id === e) {
				return channels[i];
			}
		}
	}

	function updateChannels() {
		var sel = $('#channels .selected');
		$('#channels ul li').remove();
		for (i=0;i<channels.length;i++) {
			if (sel.length>0) {
				selId = sel[0].dataset.id;
				if (channels[i].c_id===selId) {
					var chan = '<li class="selected" data-id="'+channels[i].c_id+'" data-name="'+channels[i].c_name+'" data-desc="'+channels[i].c_description+'">'+channels[i].c_description+'</li>';
				} else {
					var chan = '<li data-id="'+channels[i].c_id+'" data-name="'+channels[i].c_name+'" data-desc="'+channels[i].c_description+'">'+channels[i].c_description+'</li>';
				}
			} else {
				var chan = '<li data-id="'+channels[i].c_id+'" data-name="'+channels[i].c_name+'" data-desc="'+channels[i].c_description+'">'+channels[i].c_description+'</li>';
			}
			$('#channels ul').append(chan);
		}
	}

	function updatePresets() {
		$('#presets ul li').remove();
		for (i=0;i<presets.length;i++) {
			if (typeof preset !== 'undefined') {
				if (preset.cp_id===presets[i].cp_id) {
					var pre = '<li class="selected" data-name="'+presets[i].cp_id+'">'+presets[i].cp_name+'</li>';
				} else {
					var pre = '<li data-name="'+presets[i].cp_id+'">'+presets[i].cp_name+'</li>';
				}
			} else {
				var pre = '<li data-name="'+presets[i].cp_id+'">'+presets[i].cp_name+'</li>';
			}
			$('#presets ul').append(pre);
		}
	}

	function updateMonitors() {
		if (receivers[0]) {
			monitorSetup.left={};
			monitorSetup.left.rxid = receivers[0].d_id;
			if (receivers[0].channel) {
				monitorSetup.left.id = receivers[0].channel.c_id;
				monitorSetup.left.name = receivers[0].channel.c_name;
				monitorSetup.left.desc = receivers[0].channel.c_description;
			} else {
				//some kind of fallback here?
			}
			//LEFT
			var leftSpan = $('#leftMonitor span');
			leftSpan.attr({
				'data-rxid': monitorSetup.left.rxid,
				'data-id': monitorSetup.left.id,
				'data-name': monitorSetup.left.name,
				'data-desc': monitorSetup.left.desc
			});
			leftSpan.html(monitorSetup.left.desc);
		}
		if (receivers[1]) {
			monitorSetup.right={};
			monitorSetup.right.rxid = receivers[1].d_id;
			if (receivers[1].channel) {
				monitorSetup.right.id = receivers[1].channel.c_id;
				monitorSetup.right.name = receivers[1].channel.c_name;
				monitorSetup.right.desc = receivers[1].channel.c_description;
			} else {
				//some kind of fallback here?
			}
			//RIGHT
			var rightSpan = $('#rightMonitor span');
			rightSpan.attr({
				'data-rxid': monitorSetup.right.rxid,
				'data-id': monitorSetup.right.id,
				'data-name': monitorSetup.right.name,
				'data-desc': monitorSetup.right.desc
			});
			rightSpan.html(monitorSetup.right.desc);
		}
		if (receivers[2]) {
			monitorSetup.top={};
			monitorSetup.top.rxid = receivers[2].d_id;
			if (receivers[2].channel) {
				monitorSetup.top.id = receivers[2].channel.c_id;
				monitorSetup.top.name = receivers[2].channel.c_name;
				monitorSetup.top.desc = receivers[2].channel.c_description;
			} else {
				//some kind of fallback here?
			}
			//TOP
			var topSpan = $('#topMonitor span');
			topSpan.attr({
				'data-rxid': monitorSetup.top.rxid,
				'data-id': monitorSetup.top.id,
				'data-name': monitorSetup.top.name,
				'data-desc': monitorSetup.top.desc
			});
			topSpan.html(monitorSetup.top.desc);
		}
	}
</script>