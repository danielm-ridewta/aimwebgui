<div class="row" id="presetRow">
	<div class="col-xs-4"></div>
	<div class="col-xs-4" id="preset">
		<button type="button" class="btn btn-slate btn-lg" data-toggle="modal" data-target="#presets">Choose Layout Preset</button>
	</div>
	<div class="col-xs-4"></div>
</div>
<div class="row is-flex">
	<div class="col-xs-2"></div>
	<div class="col-xs-2" id="swapLeft">
		<i class="fa fa-arrows-h fa-6x fa-rotate-315" aria-hidden="true" data-left="leftMonitor" data-right="topMonitor"></i>
	</div>
	<div class="col-xs-4 channel" id="topMonitor">
		<span class="channel-desc" data-id="" data-name="" data-desc=""></span>
		<i class="fa fa-desktop fa-10x" aria-hidden="true" data-monitor="top" data-toggle="modal" data-target="#channels"></i>
	</div>
	<div class="col-xs-2" id="swapRight">
		<i class="fa fa-arrows-h fa-6x fa-rotate-45" aria-hidden="true" data-left="topMonitor" data-right="rightMonitor"></i>
	</div>
	<div class="col-xs-2"></div>
</div>
<div class="row is-flex">
	<div class="col-xs-2"></div>
	<div class="col-xs-3 channel" id="leftMonitor">
		<div>
			<i class="fa fa-desktop fa-6x" aria-hidden="true" data-monitor="left" data-toggle="modal" data-target="#channels"></i>
			<i class="fa fa-desktop fa-6x" aria-hidden="true" data-monitor="left" data-toggle="modal" data-target="#channels"></i>
		</div>
		<span class="channel-desc" data-id="" data-name="" data-desc=""></span>
	</div>
	<div class="col-xs-2" id="swapAcross">
		<i class="fa fa-arrows-h fa-6x" aria-hidden="true" data-left="leftMonitor" data-right="rightMonitor"></i>
	</div>
	<div class="col-xs-3 channel" id="rightMonitor">
		<div>
			<i class="fa fa-desktop fa-6x" aria-hidden="true" data-monitor="right" data-toggle="modal" data-target="#channels"></i>
			<i class="fa fa-desktop fa-6x" aria-hidden="true" data-monitor="right" data-toggle="modal" data-target="#channels"></i>
		</div>
		<span class="channel-desc" data-id="" data-name="" data-desc=""></span>
	</div>
	<div class="col-xs-2"></div>
</div>
<script>
	//Globals
	var preset = {};
	var monitorSetup = {};
	var trigger;
	var presets = false;
	var channels = false;
	var receivers = false;

	//Listener for monitor events
	var handled = false;
	$(document).on("touchend click", ".fa-desktop", function(e){
	    e.stopImmediatePropagation();
	    if(e.type == "touchend") {
	        handled = true;
	        console.log(e.target.parentElement.id);
	    }
	    else if(e.type == "click" && !handled) {
	        console.log(e.target.parentElement.id);
	    }
	    else {
	        handled = false;
	    }
	});
	//Listener for swap arrow events
	var swapped = false;
	$(document).on("touchend click", ".fa-arrows-h", function(e){
	    e.stopImmediatePropagation();
	    if(e.type == "touchend") {
	        swapped = true;
	        console.log(e.target.parentElement.id);
	        handleIt(e);
	    }
	    else if(e.type == "click" && !swapped) {
	        console.log(e.target.parentElement.id);
	        handleIt(e);
	    }
	    else {
	        swapped = false;
	    }
	});
	var channeled = false;
	$(document).on("touchend click", "#channels li", function(e) {
		e.stopImmediatePropagation();
	    if(e.type == "touchend") {
	        channeled = true;
	        handleChannelChange(e);
	    }
	    else if(e.type == "click" && !channeled) {
	        handleChannelChange(e);
	    }
	    else {
	        channeled = false;
	    }
	});
	var preset = false;
	$(document).on("touchend click", "#presets li", function(e) {
		e.stopImmediatePropagation();
	    if(e.type == "touchend") {
	        preset = true;
	        handlePreset(e);
	    }
	    else if(e.type == "click" && !preset) {
	        handlePreset(e);
	    }
	    else {
	        preset = false;
	    }
	});
	function handleIt(e) {
		var leftEle = $('#'+e.target.dataset.left+' .channel-desc')[0];
		var rightEle = $('#'+e.target.dataset.right+' .channel-desc')[0];
		var left = leftEle.innerHTML
	    var right = rightEle.innerHTML;
	    leftEle.innerHTML = right;
	    rightEle.innerHTML = left;
	    //TODO: Do whatever call to api to switch the monitor channels here

	}
	function handlePreset(e) {
		//Remove the "selected" class from any li's in this modal
		$('#presets li.selected').removeClass("selected");
		//Set the clicked element to have "selected" class
		$(e.target).addClass("selected");
		//TODO: Code to change the text labels accordingly - Is this needed if the channel changes redraws the lables?

		//TODO: Whatever code needs to be fired to actually change the monitors

	}
	function handleChannelChange(e) {
		//Remove the "selected" class from any li's in this modal
		$('#channels li.selected').removeClass("selected");
		//Set the clicked element to have "selected" class
		$(e.target).addClass("selected");
		//TODO: Code to change the text labels accordingly
		$('#channels').modal('hide');
		var selector = $('#' + trigger.dataset.monitor + 'Monitor');
		$(selector).find('span').replaceWith('<span class="channel-desc" data-id="'+e.target.dataset.id+'" data-name="'+e.target.dataset.name+'" data-desc="'+e.target.dataset.desc+'">'+e.target.dataset.desc+'</span>');
		//Update the monitorSetup object to reflect this change
		var thisMon = $(trigger.parentElement).find('i').attr('data-monitor');
		monitorSetup[thisMon] = {
			desc: e.target.dataset.desc,
			id: e.target.dataset.id,
			name: e.target.dataset.name
		};
		//TODO: Whatever code needs to be fired to actually change the monitors

	}
	//Window on load events
	// $(document).ready(function() {
	function initPage() {
		updateChannels();
		updatePresets();
		//TODO: Set a default preset -- first in array for testing
		preset = presets[0];
		// console.log(presets);
		//TODO: Set the channels according to default preset
		workspace.changePreset(preset.cp_id);

		//Add selected class to appropriate values in presets modal
		
	// });
	}

	//Find channel helper function
	function findChannel(e) {
		for (var i=0;i<channels.length;i++) {
			if (channels[i].id === e) {
				return channels[i];
			}
		}
	}

	function updateChannels() {
		$('#channels ul li').remove();
		for (i=0;i<channels.length;i++) {
			console.log(channels[i].c_name);
			var chan = '<li data-id="'+channels[i].c_id+'" data-name="'+channels[i].c_name+'" data-desc="'+channels[i].c_description+'">'+channels[i].c_description+'</li>';
			$('#channels ul').append(chan);
		}
	}

	function updatePresets() {
		$('#presets ul li').remove();
		for (i=0;i<presets.length;i++) {
			var pre = '<li data-name="'+presets[i].c_name+'" data-top="'+presets[i].top+'" data-left="'+presets[i].left+'" data-right="'+presets[i].right+'">'+presets[i].c_name+'</li>';
			$('#presets ul').append(pre);
		}
		$('#presets li[data-name="'+preset.name+'"]').addClass('selected');
	}

	function updateMonitors() {

		if (receivers[0]) {
			monitorSetup.top = {
				id: receivers[0].channel.c_id,
				name: receivers[0].channel.c_name,
				desc: receivers[0].channel.c_description
			};
			//TOP
			var topSpan = $('#topMonitor span');
			topSpan.attr({
				'data-id': monitorSetup.top.id,
				'data-name': monitorSetup.top.name,
				'data-desc': monitorSetup.top.desc
			});
			topSpan.html(monitorSetup.top.desc);
		}
		if (receivers[1]) {
			monitorSetup.left = {
				id: receivers[1].channel.c_id,
				name: receivers[1].channel.c_name,
				desc: receivers[1].channel.c_description
			};
			//LEFT
			var leftSpan = $('#leftMonitor span');
			leftSpan.attr({
				'data-id': monitorSetup.left.id,
				'data-name': monitorSetup.left.name,
				'data-desc': monitorSetup.left.desc
			});
			leftSpan.html(monitorSetup.left.desc);
		}
		if (receivers[2]) {
			monitorSetup.right = {
				id: receivers[2].channel.c_id,
				name: receivers[2].channel.c_name,
				desc: receivers[2].channel.c_description
			};
			//RIGHT
			var rightSpan = $('#rightMonitor span');
			rightSpan.attr({
				'data-id': monitorSetup.right.id,
				'data-name': monitorSetup.right.name,
				'data-desc': monitorSetup.right.desc
			});
			rightSpan.html(monitorSetup.right.desc);
		}
	}
</script>